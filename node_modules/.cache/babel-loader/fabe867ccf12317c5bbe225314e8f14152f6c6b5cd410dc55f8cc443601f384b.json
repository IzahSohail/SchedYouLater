{"ast":null,"code":"var _jsxFileName = \"/Users/izah/Desktop/schedulemate/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// Example list of time zones\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst timezones = [\"America/New_York\", \"America/Chicago\", \"America/Los_Angeles\", \"Europe/London\", \"Europe/Paris\", \"Asia/Dubai\", \"Asia/Tokyo\", \"Asia/Kolkata\", \"Australia/Sydney\", \"UTC\"];\nconst localizer = momentLocalizer(moment);\n\n// TimeAPI.io API URL\nconst TIME_API_URL = \"https://timeapi.io/api/Conversion/ConvertTimeZone\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [timezone, setTimezone] = useState('');\n  const [friendUsername, setFriendUsername] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [newEvent, setNewEvent] = useState({\n    title: '',\n    startTime: '',\n    endTime: ''\n  });\n  const [events, setEvents] = useState([]);\n  const [friendEvents, setFriendEvents] = useState([]); // Friend's events for calendar\n  const [isModalOpen, setIsModalOpen] = useState(false); // To control modal visibility\n\n  // Check localStorage for user info when the app loads\n  useEffect(() => {\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      setCurrentUser(user);\n      fetchFriendsAndEvents(user.id);\n    }\n  }, []);\n\n  // Fetch user's friends and events\n  const fetchFriendsAndEvents = async userId => {\n    try {\n      const friendsResponse = await axios.get(`http://localhost:5000/friends/${userId}`);\n      setFriends(friendsResponse.data);\n      const eventsResponse = await axios.get(`http://localhost:5000/schedule/${userId}`);\n      setEvents(eventsResponse.data.map(event => ({\n        title: event.title,\n        start: new Date(event.start_time),\n        // Keep in UTC\n        end: new Date(event.end_time) // Keep in UTC\n      })));\n    } catch (error) {\n      console.error('Error fetching friends and events:', error);\n    }\n  };\n\n  // Register new user with timezone\n  const handleRegister = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/register', {\n        username,\n        password,\n        timezone\n      });\n      setCurrentUser(response.data);\n      localStorage.setItem('currentUser', JSON.stringify(response.data));\n      setUsername('');\n      setPassword('');\n      setTimezone('');\n      fetchFriendsAndEvents(response.data.id);\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n\n  // Login user\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        username,\n        password\n      });\n      setCurrentUser(response.data);\n      localStorage.setItem('currentUser', JSON.stringify(response.data));\n      setUsername('');\n      setPassword('');\n      fetchFriendsAndEvents(response.data.id);\n    } catch (error) {\n      alert('Invalid credentials');\n    }\n  };\n\n  // Logout user\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n    setFriends([]);\n    setEvents([]);\n  };\n\n  // Add a new event (convert to UTC before sending to backend)\n  const handleAddEvent = () => {\n    const utcStartTime = new Date(newEvent.startTime).toISOString(); // Convert to UTC\n    const utcEndTime = new Date(newEvent.endTime).toISOString(); // Convert to UTC\n\n    axios.post('http://localhost:5000/add-event', {\n      userId: currentUser.id,\n      title: newEvent.title,\n      startTime: utcStartTime,\n      endTime: utcEndTime\n    }).then(response => {\n      setNewEvent({\n        title: '',\n        startTime: '',\n        endTime: ''\n      });\n      setEvents([...events, {\n        title: response.data.title,\n        start: new Date(response.data.start_time),\n        end: new Date(response.data.end_time)\n      }]);\n    }).catch(error => {\n      alert(error.response.data.message);\n    });\n  };\n\n  // Add a friend by username\n  const handleAddFriend = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/add-friend', {\n        userId: currentUser.id,\n        friendUsername\n      });\n      alert(`${friendUsername} added as a friend`);\n      setFriendUsername('');\n      fetchFriendsAndEvents(currentUser.id);\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n\n  // Fetch friend's events and open the modal (convert UTC to current user's timezone using API)\n  const handleShowFriendCalendar = async (friendId, friendTimezone) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/schedule/${friendId}`);\n      const events = await Promise.all(response.data.map(async event => {\n        const startTime = await convertTimeBetweenTimezones(event.start_time, friendTimezone, currentUser.timezone);\n        const endTime = await convertTimeBetweenTimezones(event.end_time, friendTimezone, currentUser.timezone);\n        return {\n          title: event.title,\n          start: startTime,\n          // Converted to user's time zone\n          end: endTime // Converted to user's time zone\n        };\n      }));\n      setFriendEvents(events);\n      setIsModalOpen(true); // Open the modal\n    } catch (error) {\n      console.error('Error fetching friend\\'s schedule:', error);\n    }\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Time zone conversion API function using timeapi.io\n  const convertTimeBetweenTimezones = async (time, fromTimezone, toTimezone) => {\n    try {\n      const response = await axios.post(TIME_API_URL, {\n        fromTimeZone: fromTimezone,\n        // Friend's time zone\n        toTimeZone: toTimezone,\n        // Current user's time zone\n        dateTime: new Date(time).toISOString(),\n        // Convert time to ISO format\n        dstAmbiguity: \"\" // Optional for handling DST ambiguities\n      });\n      console.log('Converted time:', response.data.convertedTime);\n\n      // Return the converted time\n      return new Date(response.data.convertedTime);\n    } catch (error) {\n      console.error('Error converting time zone:', error);\n      return new Date(time); // Fallback to UTC time if the API fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ScheduleMate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), !currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timezone,\n        onChange: e => setTimezone(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Timezone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), timezones.map(tz => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tz,\n          children: tz\n        }, tz, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", currentUser.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: friends.map(friend => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleShowFriendCalendar(friend.id, friend.timezone),\n            children: friend.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this)\n        }, friend.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add a Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Friend's Username\",\n        value: friendUsername,\n        onChange: e => setFriendUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddFriend,\n        children: \"Add Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Event to Your Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Event Title\",\n        value: newEvent.title,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        placeholder: \"Start Time\",\n        value: newEvent.startTime,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          startTime: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        placeholder: \"End Time\",\n        value: newEvent.endTime,\n        onChange: e => setNewEvent({\n          ...newEvent,\n          endTime: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        localizer: localizer,\n        events: events.map(event => ({\n          title: event.title,\n          start: new Date(event.start),\n          // Show in user's timezone (React Big Calendar accepts valid Date objects)\n          end: new Date(event.end) // Show in user's timezone\n        })),\n        startAccessor: \"start\",\n        endAccessor: \"end\",\n        style: {\n          height: 500,\n          margin: \"50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: handleCloseModal,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Friend's Calendar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          localizer: localizer,\n          events: friendEvents,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          style: {\n            height: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z4Y1E48XXshmi7M0eqaU3i6yJ/0=\");\n_c = App;\nexport default App;\n\n// Modal Component\nconst Modal = ({\n  isOpen,\n  onClose,\n  children\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: modalStyles.overlay,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: modalStyles.modal,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: modalStyles.closeButton,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Modal;\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000\n  },\n  modal: {\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '8px',\n    maxWidth: '600px',\n    width: '100%'\n  },\n  closeButton: {\n    float: 'right',\n    backgroundColor: '#f44336',\n    color: 'white',\n    border: 'none',\n    padding: '5px 10px',\n    cursor: 'pointer',\n    borderRadius: '5px'\n  }\n};\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","timezones","localizer","TIME_API_URL","App","_s","currentUser","setCurrentUser","username","setUsername","password","setPassword","timezone","setTimezone","friendUsername","setFriendUsername","friends","setFriends","newEvent","setNewEvent","title","startTime","endTime","events","setEvents","friendEvents","setFriendEvents","isModalOpen","setIsModalOpen","storedUser","localStorage","getItem","user","JSON","parse","fetchFriendsAndEvents","id","userId","friendsResponse","get","data","eventsResponse","map","event","start","Date","start_time","end","end_time","error","console","handleRegister","response","post","setItem","stringify","alert","message","handleLogin","handleLogout","removeItem","handleAddEvent","utcStartTime","toISOString","utcEndTime","then","catch","handleAddFriend","handleShowFriendCalendar","friendId","friendTimezone","Promise","all","convertTimeBetweenTimezones","handleCloseModal","time","fromTimezone","toTimezone","fromTimeZone","toTimeZone","dateTime","dstAmbiguity","log","convertedTime","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","tz","onClick","friend","startAccessor","endAccessor","style","height","margin","Modal","isOpen","onClose","_c","modalStyles","overlay","modal","closeButton","_c2","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","zIndex","padding","borderRadius","maxWidth","width","float","color","border","cursor","$RefreshReg$"],"sources":["/Users/izah/Desktop/schedulemate/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n// Example list of time zones\nconst timezones = [\n  \"America/New_York\", \"America/Chicago\", \"America/Los_Angeles\", \"Europe/London\", \"Europe/Paris\",\n  \"Asia/Dubai\", \"Asia/Tokyo\", \"Asia/Kolkata\", \"Australia/Sydney\", \"UTC\"\n];\n\nconst localizer = momentLocalizer(moment);\n\n// TimeAPI.io API URL\nconst TIME_API_URL = \"https://timeapi.io/api/Conversion/ConvertTimeZone\";\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [timezone, setTimezone] = useState('');\n  const [friendUsername, setFriendUsername] = useState('');\n  const [friends, setFriends] = useState([]);\n  const [newEvent, setNewEvent] = useState({ title: '', startTime: '', endTime: '' });\n  const [events, setEvents] = useState([]);\n  const [friendEvents, setFriendEvents] = useState([]);  // Friend's events for calendar\n  const [isModalOpen, setIsModalOpen] = useState(false); // To control modal visibility\n\n  // Check localStorage for user info when the app loads\n  useEffect(() => {\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      const user = JSON.parse(storedUser);\n      setCurrentUser(user);\n      fetchFriendsAndEvents(user.id);\n    }\n  }, []);\n\n  // Fetch user's friends and events\n  const fetchFriendsAndEvents = async (userId) => {\n    try {\n      const friendsResponse = await axios.get(`http://localhost:5000/friends/${userId}`);\n      setFriends(friendsResponse.data);\n\n      const eventsResponse = await axios.get(`http://localhost:5000/schedule/${userId}`);\n      setEvents(\n        eventsResponse.data.map(event => ({\n          title: event.title,\n          start: new Date(event.start_time), // Keep in UTC\n          end: new Date(event.end_time),     // Keep in UTC\n        }))\n      );\n    } catch (error) {\n      console.error('Error fetching friends and events:', error);\n    }\n  };\n\n  // Register new user with timezone\n  const handleRegister = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/register', { username, password, timezone });\n      setCurrentUser(response.data);\n      localStorage.setItem('currentUser', JSON.stringify(response.data));\n      setUsername('');\n      setPassword('');\n      setTimezone('');\n      fetchFriendsAndEvents(response.data.id);\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n\n  // Login user\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/login', { username, password });\n      setCurrentUser(response.data);\n      localStorage.setItem('currentUser', JSON.stringify(response.data));\n      setUsername('');\n      setPassword('');\n      fetchFriendsAndEvents(response.data.id);\n    } catch (error) {\n      alert('Invalid credentials');\n    }\n  };\n\n  // Logout user\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n    setFriends([]);\n    setEvents([]);\n  };\n\n  // Add a new event (convert to UTC before sending to backend)\n  const handleAddEvent = () => {\n    const utcStartTime = new Date(newEvent.startTime).toISOString();  // Convert to UTC\n    const utcEndTime = new Date(newEvent.endTime).toISOString();      // Convert to UTC\n\n    axios.post('http://localhost:5000/add-event', {\n      userId: currentUser.id,\n      title: newEvent.title,\n      startTime: utcStartTime,\n      endTime: utcEndTime\n    })\n    .then(response => {\n      setNewEvent({ title: '', startTime: '', endTime: '' });\n      setEvents([...events, {\n        title: response.data.title,\n        start: new Date(response.data.start_time),\n        end: new Date(response.data.end_time),\n      }]);\n    })\n    .catch(error => {\n      alert(error.response.data.message);\n    });\n  };\n\n  // Add a friend by username\n  const handleAddFriend = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/add-friend', { userId: currentUser.id, friendUsername });\n      alert(`${friendUsername} added as a friend`);\n      setFriendUsername('');\n      fetchFriendsAndEvents(currentUser.id);\n    } catch (error) {\n      alert(error.response.data.message);\n    }\n  };\n\n  // Fetch friend's events and open the modal (convert UTC to current user's timezone using API)\n  const handleShowFriendCalendar = async (friendId, friendTimezone) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/schedule/${friendId}`);\n\n      const events = await Promise.all(response.data.map(async (event) => {\n        const startTime = await convertTimeBetweenTimezones(event.start_time, friendTimezone, currentUser.timezone);\n        const endTime = await convertTimeBetweenTimezones(event.end_time, friendTimezone, currentUser.timezone);\n\n        return {\n          title: event.title,\n          start: startTime, // Converted to user's time zone\n          end: endTime,     // Converted to user's time zone\n        };\n      }));\n\n      setFriendEvents(events);\n      setIsModalOpen(true);  // Open the modal\n    } catch (error) {\n      console.error('Error fetching friend\\'s schedule:', error);\n    }\n  };\n\n  // Close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  // Time zone conversion API function using timeapi.io\n  const convertTimeBetweenTimezones = async (time, fromTimezone, toTimezone) => {\n    try {\n      const response = await axios.post(TIME_API_URL, {\n        fromTimeZone: fromTimezone, // Friend's time zone\n        toTimeZone: toTimezone,     // Current user's time zone\n        dateTime: new Date(time).toISOString(), // Convert time to ISO format\n        dstAmbiguity: \"\"  // Optional for handling DST ambiguities\n      });\n\n      console.log('Converted time:', response.data.convertedTime);\n\n      // Return the converted time\n      return new Date(response.data.convertedTime);\n    } catch (error) {\n      console.error('Error converting time zone:', error);\n      return new Date(time);  // Fallback to UTC time if the API fails\n    }\n  };\n\n  return (\n    <div>\n      <h1>ScheduleMate</h1>\n      {!currentUser ? (\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n          />\n          \n          {/* Dropdown for Timezone */}\n          <select value={timezone} onChange={e => setTimezone(e.target.value)}>\n            <option value=\"\">Select Timezone</option>\n            {timezones.map(tz => (\n              <option key={tz} value={tz}>\n                {tz}\n              </option>\n            ))}\n          </select>\n\n          <button onClick={handleLogin}>Login</button>\n          <button onClick={handleRegister}>Register</button>\n        </div>\n      ) : (\n        <div>\n          <h1>Welcome, {currentUser.username}</h1>\n          <button onClick={handleLogout}>Logout</button>\n\n          <h2>Your Friends</h2>\n          <ul>\n            {friends.map(friend => (\n              <li key={friend.id}>\n                <button onClick={() => handleShowFriendCalendar(friend.id, friend.timezone)}>\n                  {friend.username}\n                </button>\n              </li>\n            ))}\n          </ul>\n\n          {/* Friend adding form */}\n          <h2>Add a Friend</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Friend's Username\"\n            value={friendUsername}\n            onChange={e => setFriendUsername(e.target.value)}\n          />\n          <button onClick={handleAddFriend}>Add Friend</button>\n\n          <h3>Add Event to Your Calendar</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Event Title\"\n            value={newEvent.title}\n            onChange={e => setNewEvent({ ...newEvent, title: e.target.value })}\n          />\n          <input\n            type=\"datetime-local\"\n            placeholder=\"Start Time\"\n            value={newEvent.startTime}\n            onChange={e => setNewEvent({ ...newEvent, startTime: e.target.value })}\n          />\n          <input\n            type=\"datetime-local\"\n            placeholder=\"End Time\"\n            value={newEvent.endTime}\n            onChange={e => setNewEvent({ ...newEvent, endTime: e.target.value })}\n          />\n          <button onClick={handleAddEvent}>Add Event</button>\n\n          <h2>Your Calendar</h2>\n          <Calendar\n            localizer={localizer}\n            events={events.map(event => ({\n              title: event.title,\n              start: new Date(event.start), // Show in user's timezone (React Big Calendar accepts valid Date objects)\n              end: new Date(event.end),     // Show in user's timezone\n            }))}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            style={{ height: 500, margin: \"50px\" }}\n          />\n\n          {/* Modal to show friend's calendar */}\n          <Modal isOpen={isModalOpen} onClose={handleCloseModal}>\n            <h2>Friend's Calendar</h2>\n            <Calendar\n              localizer={localizer}\n              events={friendEvents}\n              startAccessor=\"start\"\n              endAccessor=\"end\"\n              style={{ height: 400 }}\n            />\n          </Modal>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n// Modal Component\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div style={modalStyles.overlay}>\n      <div style={modalStyles.modal}>\n        <button onClick={onClose} style={modalStyles.closeButton}>Close</button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst modalStyles = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1000,\n  },\n  modal: {\n    backgroundColor: '#fff',\n    padding: '20px',\n    borderRadius: '8px',\n    maxWidth: '600px',\n    width: '100%',\n  },\n  closeButton: {\n    float: 'right',\n    backgroundColor: '#f44336',\n    color: 'white',\n    border: 'none',\n    padding: '5px 10px',\n    cursor: 'pointer',\n    borderRadius: '5px',\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}